<%@ Assembly Name="System.Xml" %>
<%@ Import NameSpace="System.Xml" %>
<%@ Import NameSpace="System.Collections" %>
<%@ Import NameSpace="System.Text.RegularExpressions" %>
<%@ Argument Name="count" Type="int" %>
<%@ Argument Name="controls" Type="string[]" %>
<%@ Argument Name="controlsType" Type="string[]" %>
<%@ Argument Name="ListName" Type="string" %>
<%@ Argument Name="formatType" Type="string[]" %>
<%@ Argument Name="NameSpace" Type="string" %>
<%@ Argument Name="lookupListname" Type="string[]" %>
<%@ Argument Name="lookupExternalListname" Type="string[]" %>
<%@ Argument Name="lookupOneToOne" Type="string[]" %>
<%@ Argument Name="auxnum" Type="int" %>
<%@ Argument Name="displayName" Type="string[]" %>
<%@ Argument Name="idfield" Type="string" %>
<%@ Argument Name="ClassName" Type="string" %>
<%@ Argument Name="deletedAndlanguajeDetect" Type="string[]" %>
<%@ Argument Name="deletedNumber" Type="int" %>
using System;
using System.Configuration;
using System.Text.RegularExpressions;

namespace <%=NameSpace%>
{
	[Serializable]
	public partial class Insert<%=ListName.ToString().Replace(" ", string.Empty)%>Control : SharePointUserControl
	{
		private int intLCID = System.Threading.Thread.CurrentThread.CurrentUICulture.LCID;

		protected void Page_Load(object sender, EventArgs e)
        {
			this.Page.Form.Enctype = "multipart/form-data";

            if (!Page.IsPostBack)
            {
			 loadLocalizedValueFields();
			<%
			for(int x=0; x<count;x++)
			{
				if(controlsType[x]=="Integer")
				{
					for(int j=0; j<auxnum;j++)
					{
					 string values = lookupOneToOne[j].ToString();

						 string[] choices = null;

						 choices = values.Split(new string[] { "," }, StringSplitOptions.RemoveEmptyEntries);

						 if(choices[0]==displayName[x])
						 {
							 if(choices[2]=="dropdownlist")
								{
								%>								
									LoadingLookupOneToOne("<%=choices[1].ToString()%>", ddl<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>,"<%=choices[3].ToString()%>","Sort_Order", "<%=choices[4].ToString()%>", true, intLCID);
									
								<%
								}
								if(choices[2]=="radiobutton")
								{
								%>	
									LoadingRadioChoiceTableOneToOne("<%=choices[1].ToString()%>", rbtn<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>,"<%=choices[3].ToString()%>","Sort_Order", "<%=choices[4].ToString()%>", true, intLCID);																		
								<%
								}
						 }
					}
				}
			if(controlsType[x]=="Lookup")
			{
			%>
				LoadingLookupTable("<%=lookupListname[x].ToString()%>", ddl<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>, "ID", true);
			<%
			}
			if(controlsType[x]=="Invalid")
			{
			%>
				LoadingBCSLookupTable("<%=lookupExternalListname[x].ToString()%>", ddl<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>, "SORT_ORDER", false);
			<%
			}
			if(controlsType[x]=="Choice")
			{
			if(formatType[x]=="Dropdown")
			{
			%>
				LoadingDropdownTable("<%=ListName%>", "<%=controls[x].ToString().Replace("_x0020_", " ")%>", ddl<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>, "Sort_x0020_Order", false);
			<%
			}
			if(formatType[x]=="RadioButtons")
			{
			%>
				LoadingRadioChoiceTable("<%=ListName%>","<%=controls[x].ToString().Replace("_x0020_", " ")%>", rbtn<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>);
			<%
			}
			if(formatType[x]=="Radio Button")
			{
			%>
				LoadingRadioChoiceTable("<%=ListName%>","<%=controls[x].ToString().Replace("_x0020_", " ")%>", chk<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>);
			<%
			}
			}			
			}
			%>
            }
		}

		private void loadLocalizedValueFields()
        {
		<%
		for(int x=0; x<count;x++)
		{
			if(controlsType[x]!="Counter")
			{
		%>
			label<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.Text = getLocalizedValue("<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>Text", intLCID, "<%=ListName%>ResourceFile");
		<%
			}
		}
		%>
		}

		protected void btnOK_Click(object sender, EventArgs e)
        {            
            SPUser currentUser = GetCurrentUser();

            SPSecurity.RunWithElevatedPrivileges(delegate()
            {
                using (SPSite site = new SPSite(SPContext.Current.Site.Url))
                {
                    using (SPWeb web = site.OpenWeb())
                    {
                        addRecord(currentUser, web, false);
                        Page.Response.Redirect(SPContext.Current.Site.Url);
                    }
                }
            });            
        }

		 protected SPUser GetCurrentUser()
        {
            SPUser user;

            using (SPSite site = new SPSite(SPContext.Current.Site.Url))
            {
                using (SPWeb web = site.OpenWeb())
                {
                    user = web.CurrentUser;
                }
            }

            return user;
        }
			

		private void addRecord(SPUser author, SPWeb web, Boolean IsDraft)
        {
            web.AllowUnsafeUpdates = true;

            SPListItemCollection listItems = web.Lists["<%=ListName%>"].Items;

            SPListItem item = listItems.Add();

			<%
			for(int x=0; x<count;x++)
			{								
				if(controlsType[x].ToString()=="Text")
				{ 
				%>
				item["<%=controls[x].ToString()%>"] = txt<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.Text;			
				<%
				}
				if(controlsType[x].ToString()=="Note")
				{
				%>
				item["<%=controls[x].ToString()%>"] = Server.HtmlEncode(txt<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.Text);									
				<%
				}
				if(controlsType[x].ToString()=="Lookup")
				{
				%>
				if (ddl<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.Items.Count > 0)
				{
					if (!ddl<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.SelectedValue.Equals("0"))
					{
						item["<%=controls[x].ToString()%>"] = new SPFieldLookupValue(int.Parse(ddl<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.SelectedValue), ddl<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.SelectedItem.Text);
					}
				}
				<%
				}
				if(controlsType[x]=="Invalid")
				{
				%>
				       SetExternalFieldValue(item, "<%=controls[x].ToString().Replace("_x0020_", " ")%>", ddl<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.SelectedItem.Text);				
				<%
				}
				if(controlsType[x].ToString()=="Choice")
				{
				if(formatType[x].ToString()=="Dropdown")
				{
				%>

				if(ddl<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.Items.Count > 0)
				{
				if(!ddl<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.SelectedValue.Equals("0"))
				{
				item["<%=controls[x].ToString()%>"] = ddl<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.SelectedItem.Text;
				}
				}				
				<%
				}
				if(formatType[x].ToString()=="Choice")
				{
				%>

				SPFieldMultiChoiceValue values = new SPFieldMultiChoiceValue();

				for (int i = 0; i < chk<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.Items.Count; i++)
				{
					if (chk<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.Items[i].Selected)
					{
						values.Add(chk<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.Items[i].Text);
					}
				}

				item["<%=controls[x].ToString()%>"] = values;

				<%
				}
				if(formatType[x].ToString()=="RadioButtons")
				{
				%>

				item["<%=controls[x].ToString()%>"] = rbtn<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.SelectedItem;
				<%
				}
				}
				if(controlsType[x].ToString()=="Number")
				{
				%>
					Decimal <%=controls[x].ToString().Replace("_x0020_", string.Empty)%>=0;

						try
						{
							  <%=controls[x].ToString().Replace("_x0020_", string.Empty)%> = Decimal.Parse(txt<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.Text);
						}
						catch (Exception ex)
						{
							LogError(ex.Message, ex.StackTrace);
						}

				item["<%=controls[x].ToString()%>"] = <%=controls[x].ToString().Replace("_x0020_", string.Empty)%>;
				<%
				}
				if(controlsType[x].ToString()=="Decimal")
				{
				%>
				item["<%=controls[x].ToString()%>"] =  Convert.ToDecimal(txt<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.Text);
				<%
				}
				if(controlsType[x].ToString()=="Integer")
				{
				if(controlsType[x]=="Integer")
				{
				    int ca=0;
					for(int j=0; j<auxnum;j++)
					{
					 string values = lookupOneToOne[j].ToString();

						 string[] choices = null;

						 choices = values.Split(new string[] { "," }, StringSplitOptions.RemoveEmptyEntries);

						 if(choices[0]==displayName[x])
						 {
						   ca=1;
							 if(choices[2]=="dropdownlist")
							{
							%>								
								item["<%=controls[x].ToString()%>"] = Convert.ToInt64(ddl<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.SelectedValue);
							<%
							}
							if(choices[2]=="radiobutton")
							{
							%>	
								item["<%=controls[x].ToString()%>"] = Convert.ToInt64(rbtn<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.SelectedValue);												
							<%
							}
						 }						
					}

					if(ca==0)
					{
					%>
						Decimal <%=controls[x].ToString().Replace("_x0020_", string.Empty)%>=0;

						try
						{
							  <%=controls[x].ToString().Replace("_x0020_", string.Empty)%> = Decimal.Parse(txt<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.Text);
						}
						catch (Exception ex)
						{
							LogError(ex.Message, ex.StackTrace);
						}

							  item["<%=controls[x].ToString()%>"] = <%=controls[x].ToString().Replace("_x0020_", string.Empty)%>;
					<%
					}
				}				
				}
				if(controlsType[x].ToString()=="Currency")			
				{
				%>
				item["<%=controls[x].ToString()%>"] = txt<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.Text;
				<%
				}
				if(controlsType[x].ToString()=="DateTime")	
				{
				%>

				if (!<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.IsDateEmpty)
				{
				item["<%=controls[x].ToString()%>"] = <%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.SelectedDate;
				}									
				<%
				}
				if(controlsType[x].ToString()=="Boolean")
				{
				%>
				item["<%=controls[x].ToString()%>"] = chk<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.Checked ? true : false;
				<%
				}
				if(controlsType[x].ToString()=="User")
				{
				%>

				ArrayList arr<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>Users = new ArrayList();
				PickerEntity user<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>Entity = new PickerEntity();
				SPFieldUserValueCollection group<%=controls[x].ToString().Replace("_x0020_", string.Empty)%> = new SPFieldUserValueCollection();

				for (int i = 0; i < pe<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.Accounts.Count; i++)
				{
					user<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>Entity = (PickerEntity)pe<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.Entities[i];
					arr<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>Users.Add(user<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>Entity.Key);
				}

				foreach (object obj in arr<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>Users)
				{
					String login = obj.ToString();
					SPUser user = web.EnsureUser(login);
					SPFieldUserValue val = new SPFieldUserValue(web, user.ID, user.Name);
					group<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.Add(val);
				}
				
				 item["<%=controls[x].ToString()%>"] = group<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>;							
				
				<%
				}													
			}
			
			for(int k=0;k<deletedNumber;k++)
			{
				if(deletedAndlanguajeDetect[k].ToString()=="Language")
				{
			%>
					if (intLCID == 1033)
					{
						item["Language"]= 0;
					}

					if (intLCID == 3082)
					{
						item["Language"]= 1;
					}
				
			<%
				}
				if(deletedAndlanguajeDetect[k].ToString()=="Deleted")
				{
			%>
					item["Deleted"]= 0;
			<%
				}
			}
			
			%>
			item.Update();

            web.AllowUnsafeUpdates = false;
		}		

	}

}