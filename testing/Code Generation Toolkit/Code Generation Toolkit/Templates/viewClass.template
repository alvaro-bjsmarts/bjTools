<%@ Assembly Name="System.Xml" %>
<%@ Import NameSpace="System.Xml" %>
<%@ Import NameSpace="System.Collections" %>
<%@ Import NameSpace="System.Text.RegularExpressions" %>
<%@ Argument Name="count" Type="int" %>
<%@ Argument Name="controls" Type="string[]" %>
<%@ Argument Name="controlsType" Type="string[]" %>
<%@ Argument Name="ListName" Type="string" %>
<%@ Argument Name="NameSpace" Type="string" %>
<%@ Argument Name="lookupOneToOne" Type="string[]" %>
<%@ Argument Name="auxnum" Type="int" %>
<%@ Argument Name="displayName" Type="string[]" %>
<%@ Argument Name="attachment" Type="string" %>
<%@ Argument Name="ClassName" Type="string" %>




using System;
using System.Configuration;
using System.Text.RegularExpressions;

namespace <%=NameSpace%>
{
	[Serializable]
	public partial class View<%=ListName.ToString().Replace(" ", string.Empty)%>Control : SharePointUserControl
	{
		private int intLCID = System.Threading.Thread.CurrentThread.CurrentUICulture.LCID;

		protected void Page_Load(object sender, EventArgs e)
        {
            SPContext currentContext = SPContext.Current;

            if (!Page.IsPostBack)
            {                
                if (Page.Request.QueryString["RecordID"] != null)
                {

					 loadLocalizedValueFields();

					 SPSecurity.RunWithElevatedPrivileges(delegate()
                     {
                        using (SPSite site = new SPSite(SPContext.Current.Site.Url))
                        {
                            using (SPWeb web = site.OpenWeb())
                            {
								SPListItem ListItem;
								
                                ListItem = GetCurrentItem();
								
								<%
								for(int x=0; x<count;x++)
								{								
									if(controlsType[x].ToString()=="Text")
									{ %>
									lbl<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.Text = GetItemText(ListItem, "<%=controls[x].ToString()%>");
									<%
									}
									if(controlsType[x].ToString()=="Note")
									{
									%>
									lbl<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.Text = GetItemText(ListItem, "<%=controls[x].ToString()%>").Replace(Environment.NewLine, "<br />");									
									<%
									}
									if(controlsType[x].ToString()=="Choice")
									{
									%>
									lbl<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.Text = GetItemTextChoice(ListItem, "<%=controls[x].ToString()%>");
									<%
									}
									if(controlsType[x].ToString()=="Number")
									{
									%>
									lbl<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.Text = GetItemText(ListItem, "<%=controls[x].ToString()%>");									
									<%
									}
									if(controlsType[x].ToString()=="Currency")			
									{
									%>								  
									lbl<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.Text = GetItemText(ListItem, "<%=controls[x].ToString()%>");	
									<%
									}
									if(controlsType[x].ToString()=="DateTime")	
									{
									%>
									if(ListItem["<%=controls[x].ToString()%>"] != null)
									{
										DateTime SuggestedStartDate;
										DateTime.TryParse(GetItemText(ListItem, "<%=controls[x].ToString()%>"), out SuggestedStartDate);
										lbl<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.Text  = SuggestedStartDate.ToString("MM/dd/yyyy");
									}									
									<%
									}
									if(controlsType[x].ToString()=="Boolean")
									{
									%>
									if (ListItem["<%=controls[x].ToString()%>"].ToString() == "True")
									{
										lbl<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.Text = "Yes";
									}
									else
									{
										lbl<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.Text = "No";
									}
									<%
									}
									if(controlsType[x].ToString()=="User")
									{
									%>
									lbl<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.Text = GetItemTextUser(ListItem, "<%=controls[x].ToString()%>");									
									<%
									}
									if(controlsType[x].ToString()=="Lookup")
									{
									%>
									lbl<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.Text = GetItemTextDropdownlist(ListItem, "<%=controls[x].ToString()%>");
									<%
									}
									if(controlsType[x].ToString()=="BusinessData")
									{
									 int ca=0;

										for(int j=0; j<auxnum;j++)
										{
											string values = lookupOneToOne[j].ToString();

											string[] choices = null;

											choices = values.Split(new string[] { "," }, StringSplitOptions.RemoveEmptyEntries);

											if(choices[0]==displayName[x])
											{
											ca=1;
											%>								
											lbl<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.Text =  GetItemTextExternalDataSP("<%=choices[1].ToString()%>",ListItem, "<%=controls[x].ToString()%>","<%=choices[4].ToString()%>","<%=choices[3].ToString()%>");
											<%
											}											
										}

										if(ca==0)
										{
										%>
										lbl<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.Text = GetItemTextDropdownlistExternal(ListItem, "<%=controls[x].ToString()%>");
										<%
										}

									}
									if(controlsType[x].ToString()=="Integer")
									{
									%>
									lbl<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.Text =  GetItemText(ListItem, "<%=controls[x].ToString()%>");
									<%
									}																		
								}
								if(attachment=="True")
								{
								%>
								try
                                {
                                    BindAttachmentData();
                                }
                                catch (Exception ex)
								{
									SharePointContext.Current.Log.Error(ex.Message, ex.StackTrace);
								}
								<%
								}
								%>
							}
						}
                    });	
				}
			}
		}


		private void loadLocalizedValueFields()
        {
		<%
		for(int x=0; x<count;x++)
		{
		%>
			label<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>.Text = getLocalizedValue("<%=controls[x].ToString().Replace("_x0020_", string.Empty)%>Text", intLCID, "<%=ListName%>ResourceFile");
		<%
		}
		%>
		}

		public SPListItem GetCurrentItem()
        {
           SPListItem item = null;

           if (Page.Request.QueryString["RecordId"] != null)
           {
               int RecordId = int.Parse(Page.Request.QueryString["RecordId"].ToString());

               using (SPSite site = new SPSite(SPContext.Current.Site.Url))
               {
                   using (SPWeb web = site.OpenWeb())
                   {
                       SPList list = web.Lists["<%=ListName%>"];
                       item = list.Items.GetItemById(RecordId);
                   }
               }
           }

           return item;
        }		

		<%

		if(attachment=="True")
		{

		%>
		public void BindAttachmentData()
        {
            using (SPSite site = new SPSite(SPContext.Current.Site.Url))
            {
                using (SPWeb web = site.OpenWeb())
                {
                    SPListItem currentItem = null;

                    if (Page.Request.QueryString["RecordId"] != null)
                    {
                        int RecordId = int.Parse(Page.Request.QueryString["RecordId"].ToString());
                        
                        SPList list = web.Lists["<%=ListName%>"];
                        currentItem = list.Items.GetItemById(RecordId);
                        
                    }

                    DataTable dt = new DataTable();

                    dt.Columns.Add("Filename");
                    dt.Columns.Add("FilenameUrl");

                    for (int i = 0; i < currentItem.Attachments.Count; i++)
                    {
                        String filename = currentItem.Attachments[i];

                        String attachmentAbsoluteURL =
                                currentItem.Attachments.UrlPrefix
                                + filename;

                        SPFile attachmentFile = web.GetFile(attachmentAbsoluteURL);

                        String listUrl = web.Url + "/" + currentItem.ParentList.RootFolder.Url;
                        String attachmentUrl = listUrl + "/attachments/" + currentItem.ID + "/" + attachmentFile.Name;

                        dt.Rows.Add();
                        dt.Rows[i]["Filename"] = attachmentFile.Name;
                        dt.Rows[i]["FilenameUrl"] = attachmentUrl;
                    }

                    dlfiles.DataSource = dt;
                    dlfiles.DataBind();
                }
            }

        }

		<%
		}
		%>

		
		protected void b_Click(object sender, EventArgs e)
        {
             if (Page.Request.QueryString["RecordID"] != null)
             {
                 Response.Redirect("/Pages/<%=ListName.ToString().Replace(" ", string.Empty)%>UpdatePage.aspx?RecordId=" + Page.Request.QueryString["RecordID"].ToString());
             }
        }	
	}
}
